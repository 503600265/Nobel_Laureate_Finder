{"ast":null,"code":"var _jsxFileName = \"E:\\\\Git Repo\\\\Nobel_Laureate_Finder\\\\nobel_finder\\\\src\\\\Components\\\\Search.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// saerch bar\nconst Search = () => /*#__PURE__*/_jsxDEV(\"form\", {\n  action: \"/\",\n  method: \"get\",\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: \"header-search\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"visually-hidden\",\n      children: \"Search Nobel Laureate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    id: \"header-search\",\n    placeholder: \"Search Nobel Laureate\",\n    name: \"s\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"submit\",\n    children: \"Search\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 5\n}, this);\n\n_c = Search;\nexport default Search; // test data\n\nconst posts = [{\n  id: '1',\n  name: 'This first post is about React'\n}, {\n  id: '2',\n  name: 'This next post is about Preact'\n}, {\n  id: '3',\n  name: 'We have yet another React post!'\n}, {\n  id: '4',\n  name: 'This is the fourth and final post'\n}];\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: post.name\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Search\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["E:/Git Repo/Nobel_Laureate_Finder/nobel_finder/src/Components/Search.js"],"names":["Search","posts","id","name","App","map","post"],"mappings":";;;AACA;AACA,MAAMA,MAAM,GAAG,mBACX;AAAM,EAAA,MAAM,EAAC,GAAb;AAAiB,EAAA,MAAM,EAAC,KAAxB;AAAA,0BACI;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA,2BACI;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,eAII;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,EAAE,EAAC,eAFP;AAGI,IAAA,WAAW,EAAC,uBAHhB;AAII,IAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,UAJJ,eAUI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMA,M;AAeN,eAAeA,MAAf,C,CAGA;;AACA,MAAMC,KAAK,GAAG,CACV;AAAEC,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CADU,EAEV;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAFU,EAGV;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAHU,EAIV;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAJU,CAAd;;AAOA,MAAMC,GAAG,GAAG,MAAM;AACd,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACKH,KAAK,CAACI,GAAN,CAAWC,IAAD,iBACP;AAAA,kBAAmBA,IAAI,CAACH;AAAxB,SAASG,IAAI,CAACJ,EAAd;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAXD;;MAAME,G","sourcesContent":["\r\n// saerch bar\r\nconst Search = () => (\r\n    <form action=\"/\" method=\"get\">\r\n        <label htmlFor=\"header-search\">\r\n            <span className=\"visually-hidden\">Search Nobel Laureate</span>\r\n        </label>\r\n        <input\r\n            type=\"text\"\r\n            id=\"header-search\"\r\n            placeholder=\"Search Nobel Laureate\"\r\n            name=\"s\" \r\n        />\r\n        <button type=\"submit\">Search</button>\r\n    </form>\r\n);\r\n\r\nexport default Search;\r\n\r\n\r\n// test data\r\nconst posts = [\r\n    { id: '1', name: 'This first post is about React' },\r\n    { id: '2', name: 'This next post is about Preact' },\r\n    { id: '3', name: 'We have yet another React post!' },\r\n    { id: '4', name: 'This is the fourth and final post' },\r\n];\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <Search />\r\n            <ul>\r\n                {posts.map((post) => (\r\n                    <li key={post.id}>{post.name}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}